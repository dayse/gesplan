//--------------------------------------------------------------------------------//
//                               COPYRIGHT NOTICE                                 //
//--------------------------------------------------------------------------------//
// Copyright (c) 2012, Instituto de Microelectronica de Sevilla (IMSE-CNM)        //
//                                                                                //
// All rights reserved.                                                           //
//                                                                                //
// Redistribution and use in source and binary forms, with or without             //
// modification, are permitted provided that the following  conditions are met:   //
//                                                                                //
//     * Redistributions of source code must retain the above copyright notice,   //
//       this list of conditions and the following disclaimer.                    // 
//                                                                                //
//     * Redistributions in binary form must reproduce the above copyright        // 
//       notice, this list of conditions and the following disclaimer in the      //
//       documentation and/or other materials provided with the distribution.     //
//                                                                                //
//     * Neither the name of the IMSE-CNM nor the names of its contributors may   //
//       be used to endorse or promote products derived from this software        //
//       without specific prior written permission.                               //
//                                                                                //
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"    //
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE      //
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE // 
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE  //
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL     //
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR     //
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER     //
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,  //
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  //
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.           //
//--------------------------------------------------------------------------------//

package xfuzzy.xfsg;

import javax.swing.ImageIcon;

/**
 * Clase que contiene la descripción de todas las imágenes que se usan en la
 * herramienta Xfsg en formato matricial
 * 
 * @author Jesús Izquierdo Tena
 */
public class XfsgIcons {

	/**
	 * Codificación GIF del icono "Xfsg_logo"
	 */
	private static final byte[] xfsg_logo_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 100, 0, 50, 0, -94, 0, 0, -119,
				-120, -124, 25, 97, 71, 50, 127, 103, -68, -109, 122, -44, -54,
				-77, -114, -102, -116, -79, -83, -96, -90, 121, 99, 33, -7, 4,
				0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 100, 0, 50, 0, 0, 3, -1, 8, -70,
				-36, -2, 48, -54, 73, -85, -67, 56, -21, -51, -69, -1, 96, 40,
				-114, 100, 105, -98, 104, -86, -82, 108, -37, 20, 112, 92, 44,
				114, 109, -37, -54, 13, 79, -73, 11, -64, -122, -96, 80, 38,
				28, 22, -113, 67, 34, 50, -10, 2, 46, 103, 43, 39, 97, -118,
				12, 18, -112, -45, 108, 22, -85, -43, 6, 109, 86, 67, -9, 11,
				69, 29, 14, -126, -76, 90, 16, 28, 0, -42, -126, -77, 32, 16,
				-104, -45, -17, 116, -128, 97, -32, -74, -33, 5, 122, 87, 49,
				124, 125, 120, -128, 98, 6, 59, 102, 104, 112, 108, 65, 111,
				107, 7, 3, 120, -108, 119, -110, 7, -107, -108, 0, 87, 0, -105,
				-103, 127, 73, 39, -110, -112, 106, 1, 5, 83, -115, -110, 126,
				-97, 7, 0, -97, -102, 3, -98, -81, 119, -113, -108, 115, 118,
				-85, 127, 116, -73, -128, 15, 3, 5, 112, -90, 87, 107, 1, 0, 3,
				6, -71, -107, -104, -77, 120, -78, -52, 117, 4, -64, -122, 117,
				117, 126, -42, -91, 105, 16, 124, -115, 2, -47, -43, 115, -58,
				-56, -77, 113, -49, -106, 3, -55, -81, -89, -30, 38, -86, -115,
				6, -82, -51, -110, -103, 2, 51, 114, -107, -35, -16, -51, -109,
				-107, -101, -55, -35, 6, 121, 92, 57, -56, -106, 13, -110,
				-126, 94, 15, 70, 17, 51, -59, -85, 14, -95, 76, -22, 84, 85,
				58, -75, 79, 95, -90, 1, 4, -14, -127, -62, -75, -117, -1, 1,
				-57, 58, -16, 112, 105, -37, 70, 44, -104, -128, -121, 19, 9,
				-100, 57, -105, -78, -94, -71, -117, 25, 51, 37, 10, -120, 112,
				1, -63, 98, 6, 111, 69, 104, -73, -80, 84, -127, 61, 46, -17,
				80, -36, -58, -113, 64, -48, 0, 103, 96, 106, -68, 51, -84,
				102, -124, 94, 8, 113, -114, 36, -43, -120, 78, -127, -107, 16,
				-89, -16, 89, 74, 71, -116, -106, 88, -79, -108, -54, 44, 16,
				112, 65, 89, 5, 29, -13, -24, 124, 80, -128, 15, 48, 110, 106,
				-116, -54, 75, 105, 96, -44, -89, 83, 89, -50, 36, -83, -124,
				-111, 43, -61, -77, -16, 26, -24, 42, -74, -106, -63, -116,
				-74, 36, -31, 118, 91, -119, 14, -41, -78, 121, 94, -11, 62,
				-58, -29, -75, -53, -107, -103, 82, 15, 58, 5, 103, -16, 77, 4,
				24, -57, 20, -45, 83, -55, 19, 93, 0, 55, -77, 40, 58, -93,
				108, 121, -117, -76, -125, -102, 99, 115, 46, -24, -44, 65, 98,
				-72, 70, 111, -89, 81, -58, -14, -43, -55, -43, -76, 18, -23,
				-64, -43, -80, 20, 53, -112, -69, 58, -78, -107, -12, 86, 49,
				-48, 115, -36, -16, 16, 50, -67, 11, 56, -99, -34, -107, 48,
				-65, 65, 14, -56, 78, -56, -64, 107, 21, -27, 112, 43, -102,
				-34, -12, -86, -108, -127, -6, -3, 19, -106, -81, -23, 47, 102,
				7, -54, 119, 32, 94, -63, -42, -14, -120, -95, -105, 100, 34,
				4, -93, -72, 106, -1, -108, -52, 69, 9, 118, -108, 112, 18, 95,
				3, 5, -39, 84, 27, 19, 63, 32, 86, 94, 26, -116, 5, 83, 89, 17,
				90, -84, -73, -41, -128, -17, 100, 114, -59, 55, 9, 110, -105,
				89, 96, -122, -35, -96, 91, 119, 112, -100, 71, -116, 58, 20,
				118, 33, -115, 38, -109, -35, -127, -47, 81, 1, 52, -123, -42,
				64, -101, 57, 37, -30, -120, -51, -87, -31, 32, 54, -62, -60,
				-46, 10, -121, -93, -111, -43, 80, 39, 48, -63, 40, -56, -127,
				30, -51, 23, 98, 13, -28, -63, -111, 8, 28, -31, 84, -91, -38,
				-113, 112, -32, -43, 8, -111, 124, 25, 117, -49, 59, 87, 62,
				72, 77, 54, 55, -26, -104, 70, 52, 80, -114, 56, -102, -113,
				84, -91, 97, -91, 113, 88, 82, 34, -58, 81, 108, 112, -109,
				-26, 110, 37, 85, -45, 32, -109, -6, -83, -47, -44, 26, 102,
				-98, 114, 85, 31, 85, -94, -78, 91, 117, 50, 121, 83, -119,
				-116, 8, -50, -73, -96, 13, 56, 10, -70, -58, 79, -36, -8, -87,
				80, -96, 4, -28, 114, 82, 86, 126, 33, 10, 85, -115, -79, 121,
				118, -89, 12, -65, 52, -78, 38, -97, -56, -120, 26, -115, 36,
				121, -22, -120, 14, -116, -128, -36, 101, -25, -96, 32, 49,
				-16, -22, 31, -128, 48, 26, -86, -109, 83, -28, 104, 76, -86,
				106, 114, 98, 102, 114, -122, -96, 86, 14, 29, -120, -126, -44,
				97, 103, -76, -27, -128, -89, -104, -69, -114, -36, -86, -122,
				49, -111, 10, -57, 28, 122, -4, -16, 49, 44, -79, -91, -50,
				-72, -127, -83, -36, -76, -111, -86, 102, 85, 10, -73, -21,
				-100, 19, -7, 8, 99, 30, 110, 38, 2, -126, -120, 55, 120, 91,
				3, 25, 96, -128, 74, 18, -80, -43, 32, 114, -107, 68, -108,
				-100, -78, 10, 124, 31, -24, 96, 5, 21, 100, 8, -79, -59, -65,
				0, -117, -37, 96, 17, 96, 92, -58, -60, 49, -22, -2, -32, -43,
				18, 33, -24, 16, 3, -68, 96, 8, -25, -124, -59, 101, 40, 43,
				-16, -64, 6, 31, -4, 111, 21, 100, 68, -36, -61, -89, -11, -47,
				48, -14, 103, 18, -77, 37, -79, 12, 35, -116, -84, 3, 4, 25,
				99, 80, -78, 15, 48, -81, 108, 50, -125, -122, -47, -84, 2,
				-53, 13, -46, -96, 44, -53, 51, -21, 108, 2, -49, 63, 52, -79,
				-61, -47, 66, -73, -128, -61, -51, -118, 16, -99, 52, 10, 71,
				-29, 112, -104, -47, 79, -17, -68, -14, -44, 69, -33, 89, 117,
				10, 87, -101, -68, -75, 11, 9, 0, 0, 59 };
		return data;
	}

	/**
	 * Codificación GIF del icono "dbase"
	 */
	private static final byte[] dbase_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 25, 0, 25, 0, -77, 0, 0, -1,
				-1, -1, -24, -17, -3, -67, -47, -10, -56, -37, -3, -42, -26,
				-1, 92, -118, -58, 108, -109, -54, 124, -93, -45, -117, -82,
				-39, 52, 102, -96, -100, -67, -30, -85, -56, -24, -78, -43,
				-12, -57, -29, -4, -100, -58, -21, -74, -19, -1, 33, -7, 4, 1,
				0, 0, 0, 0, 44, 0, 0, 0, 0, 25, 0, 25, 0, 0, 4, -11, 16, -56,
				9, -110, -67, 56, -47, 45, -17, 18, 77, 67, 16, 79, -55, 56,
				23, -57, -116, 67, 59, -124, 112, 41, -53, -50, -108, 4, -82,
				11, -121, 115, -81, 85, 10, -106, 110, -41, -109, 41, 126,
				-119, -61, -63, 96, 56, 32, 20, 12, -127, 96, -64, -88, 58, 16,
				-121, -126, -42, -128, 52, 32, 62, 11, -59, -110, -87, 45, 55,
				-107, -52, -18, 33, 24, 104, -69, 7, 82, -122, 66, -127, -64,
				26, 10, 106, -59, -64, -3, 22, 48, -62, 117, 99, 120, 29, 77,
				10, 2, 35, -120, 13, 126, 11, 14, 116, 118, 119, 72, 9, 6, 122,
				-119, 33, 86, 87, -127, -112, 72, 120, 5, 11, 3, -107, -105,
				-127, 120, 41, 21, 78, 11, 35, 2, 11, 88, 99, 76, 74, -103, 92,
				-124, 107, 4, 124, 109, 13, 112, 2, 115, -103, -125, 21, -123,
				123, 124, 4, 112, 127, -114, -84, 121, -66, 109, 4, -118, 127,
				-128, -113, -69, 22, 5, 8, -97, 35, 48, -95, -94, -92, -110,
				120, 95, 45, -56, 13, -95, 75, -93, -51, 107, 98, 99, 74, -126,
				-93, 9, 5, 77, -80, -91, 95, 110, 4, -87, -114, 117, -15, -113,
				-59, -76, -64, -117, -61, 76, -22, 0, -67, -65, -55, 11, -53,
				-126, 126, 0, 120, 70, 9, -44, -97, 70, -70, 10, 112, -16, 0,
				-62, -46, 9, 49, 24, 56, 108, -72, 80, 38, -94, -60, 8, 0, 59 };
		return data;
	}

	/**
	 * Codificación GIF del icono "dbase_d"
	 */
	private static final byte[] dbase_d_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 25, 0, 25, 0, -77, 15, 0, -122,
				-122, -122, -106, -106, -106, -93, -93, -93, -83, -83, -83,
				-78, -78, -78, -69, -69, -69, -61, -61, -61, -52, -52, -52,
				-45, -45, -45, -37, -37, -37, -28, -28, -28, -20, -20, -20,
				-15, -15, -15, -9, -9, -9, -3, -3, -3, -1, -1, -1, 33, -7, 4,
				1, 0, 0, 15, 0, 44, 0, 0, 0, 0, 25, 0, 25, 0, 0, 4, -1, -16,
				-55, 73, -85, -67, -49, 53, -90, 84, 74, -56, 113, 32, 100,
				-78, 52, -50, -27, 44, -34, -9, 117, 96, 40, 30, 74, 74, 49,
				-28, -62, 48, 77, -49, -80, 32, 81, -95, 96, 40, 36, 36, 14,
				-122, 81, -45, -37, 0, 67, -59, 2, -127, 48, 40, 38, 122, -117,
				-95, -62, -9, 60, 68, -87, -125, -22, 2, 97, -32, 117, 16, 83,
				-61, 8, 26, 37, 30, 18, -99, -123, -95, -36, -24, -32, -44, 8,
				-112, -85, 69, -90, 26, -25, 102, 10, 99, 111, 12, 26, 10, 100,
				5, 3, 2, 1, -116, 2, 127, 5, -127, -125, 9, -123, 117, -120,
				-118, -116, 1, -114, 9, 69, 60, 112, 56, -124, -122, -106,
				-117, -115, -113, 39, 31, -97, -109, -95, 69, -105, -92, 9, 68,
				60, 89, 31, -96, -107, -85, -93, -103, 67, 0, 8, 88, 7, 2, 4,
				6, 8, -108, -121, -75, -104, 1, 0, 2, 3, 7, -127, 8, -93, 85,
				94, 82, -93, 0, -47, 2, 7, 11, 94, -111, 65, -49, -74, -57, 68,
				36, 111, -128, 117, -126, 33, -87, 13, 93, 6, 4, -93, 4, -101,
				101, 10, -112, -110, -63, -94, -104, -102, -68, 30, 3, 59, -30,
				-17, -61, -83, 7, 1, 32, 3, 11, -18, -86, 18, 105, 51, 82, 32,
				-128, -82, 4, -23, 18, -52, 18, 38, 48, -98, 20, 0, 87, 36, 36,
				24, -32, 11, -63, -126, 80, 7, -98, 17, -117, -122, -96, 2, 3,
				94, 1, 31, 6, 16, 41, 66, -123, 81, 52, 0, 1, -54, 96, 88, 113,
				-32, 92, -79, 104, -103, 8, 80, -77, -127, 33, -61, -96, 54,
				120, 46, 90, -120, 0, 0, 59 };
		return data;
	}

	/**
	 * Codificación GIF del icono "rulebase"
	 */
	private static final byte[] rulebase_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 25, 0, 25, 0, -94, 7, 0, -100,
				95, 95, 104, -111, -70, -30, 28, 26, -6, -2, -2, 17, 9, 13, 89,
				39, 49, -111, -67, -13, -1, -1, -1, 33, -7, 4, 1, 0, 0, 7, 0,
				44, 0, 0, 0, 0, 25, 0, 25, 0, 0, 3, -77, 56, -73, -85, 1, 34,
				70, 0, -114, 98, 22, -113, 1, -91, 40, 66, 39, 100, 24, -93,
				64, 5, 81, -92, 4, 17, -84, -45, 85, 30, -111, -38, -74, -127,
				-95, 63, 32, 32, 55, 16, 64, -63, -16, 74, 17, 85, -122, 84,
				-92, -92, -8, -28, 0, -71, -128, -12, 6, 72, -10, 100, -100,
				79, 18, 39, 53, -36, -92, 48, 95, -125, 86, -56, -35, -122,
				-47, 66, 53, 69, 25, 41, -78, 70, 0, -41, 21, 45, -74, 51, 89,
				39, 113, -9, 109, -87, -17, 111, 65, 43, 116, 42, 106, 43, 127,
				20, 16, 120, 65, 66, -125, -120, -119, -112, 65, 111, 1, 33,
				-111, -106, -105, 110, 77, -107, -105, -100, -110, 22, -116,
				-99, -100, 2, 1, 25, -101, -95, -106, 33, 12, -96, -89, -119,
				110, 99, -90, -84, 33, 63, 89, -84, -83, 98, 37, -75, -74, 63,
				-97, -80, -99, -82, 26, -71, 65, 51, -97, -89, 30, -73, 37, 18,
				-94, -92, 99, -52, 39, 109, 30, 19, 62, 27, 88, 9, 0, 59 };
		return data;
	}

	/**
	 * Codificación GIF del icono "crisp"
	 */
	private static final byte[] crisp_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 25, 0, 25, 0, -77, 15, 0, -15,
				-11, -20, 17, -15, 52, -2, 6, 7, 3, -72, -79, 9, 58, -22, -105,
				-102, -105, -1, -128, -128, -2, 66, 65, -119, -2, -121, -77,
				-80, -4, 68, -128, 118, -74, 57, 57, 79, 2, -75, -37, -54, -51,
				113, 104, -9, -1, -1, -1, 33, -7, 4, 1, 0, 0, 15, 0, 44, 0, 0,
				0, 0, 25, 0, 25, 0, 0, 4, -55, -16, -55, 73, 43, 2, 53, 107,
				10, 2, -38, 96, -43, 5, 33, -105, -100, 79, -109, 60, 72, -32,
				-107, 18, -32, 16, -50, -109, 56, -35, -32, 98, -16, 51, -93,
				45, 93, -128, 39, 58, 24, -113, 7, 6, 97, 113, 88, 56, 93, 31,
				-115, 65, 64, 93, 40, 22, 4, 2, -29, 74, 85, -20, 98, 0, 30,
				-32, 80, 29, 16, 6, 102, -59, 64, 33, -16, -66, 0, -115, 66,
				99, 50, -90, 42, -47, -39, -77, 21, -6, -128, 63, 10, 28, 84,
				109, 104, 1, 104, 107, 106, 95, 125, 115, 20, 83, 93, 58, -122,
				-122, 124, 41, -117, -116, -126, 46, -105, 46, -121, 67, 13,
				13, 68, 116, -126, 7, 97, -94, 113, 127, 5, 0, 5, 114, 26, 13,
				-126, 6, 20, -87, -88, 48, 0, 84, -108, 49, 113, -128, 37, 13,
				7, -76, -118, -91, -72, 2, -83, 21, -81, 114, -98, 20, -85,
				-95, 25, 112, -100, -87, -86, 2, -57, 25, -100, 37, -78, 7, 32,
				7, -64, 32, 83, -69, 19, 83, -60, 21, 83, -43, 6, -32, -31,
				-32, 84, 33, -115, -126, -25, -24, -41, -24, -21, -84, 27, 17,
				0, 59 };
		return data;
	}

	/**
	 * Codificacion GIF del icono "folder"
	 */
	private static final byte[] folder_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 16, 0, 16, 0, -62, 0, 0, -128,
				-128, -128, -64, -64, -64, -1, -1, 0, -1, -1, -1, 0, 0, 0, -1,
				-1, -1, -1, -1, -1, -1, -1, -1, 33, -2, 14, 77, 97, 100, 101,
				32, 119, 105, 116, 104, 32, 71, 73, 77, 80, 0, 33, -7, 4, 1,
				10, 0, 5, 0, 44, 0, 0, 0, 0, 16, 0, 16, 0, 0, 3, 59, 88, -70,
				-36, 11, 16, 58, 6, -126, -80, 1, -52, 82, -81, -49, -111, -60,
				13, 100, 105, -110, 0, 49, 126, -84, -107, -114, 88, 123, -67,
				-64, 32, -57, -12, 16, -17, -77, 90, -33, -98, 28, 111, -105,
				3, -70, 124, -95, 100, 72, 85, 32, 56, -97, 80, -24, 102, 74,
				117, 36, 0, 0, 59 };
		return data;
	}

	/**
	 * Codificacion GIF del icono "ofolder"
	 */
	private static final byte[] ofolder_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 16, 0, 16, 0, -62, 0, 0, -49,
				-49, -49, 0, 0, 0, -128, -128, -128, -1, -1, -1, -64, -64, -64,
				-1, -1, 0, -1, -1, -1, -1, -1, -1, 33, -2, 14, 77, 97, 100,
				101, 32, 119, 105, 116, 104, 32, 71, 73, 77, 80, 0, 33, -7, 4,
				1, 10, 0, 0, 0, 44, 0, 0, 0, 0, 16, 0, 16, 0, 0, 3, 66, 8, -70,
				-36, 44, 16, -70, 55, 106, 21, 19, -120, 65, 74, 39, 67, 20,
				41, -101, 103, -126, 86, 24, 104, -36, -23, 18, 66, 32, -50,
				98, 17, 111, 105, 30, -61, 114, -5, -71, -78, 24, -21, 71, -68,
				-83, 74, -60, -109, 108, -59, 122, -103, 98, 76, 26, 45, -64,
				4, 80, -81, 88, 108, 102, -53, 109, 36, 0, 0, 59 };
		return data;
	}

	/**
	 * Codificacion GIF del icono "ok"
	 */
	private static final byte[] ok_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 16, 0, 16, 0, -77, 15, 0, -66,
				-49, -66, 0, -13, 0, -27, -14, -27, 51, -103, 51, -98, -73,
				-98, 104, -96, 104, 21, 108, 21, 24, -71, 24, 49, -94, 49, 4,
				-107, 4, -41, -29, -41, 0, -43, 0, -116, -61, -116, 0, -78, 0,
				-58, -33, -58, -1, -1, -1, 33, -7, 4, 1, 0, 0, 15, 0, 44, 0, 0,
				0, 0, 16, 0, 16, 0, 0, 4, 81, -16, -55, 73, -85, -67, 84, -32,
				-52, 10, 114, -101, -64, 32, -120, -126, 36, 96, 37, 34, 7,
				-94, 49, 109, -6, -84, 71, -85, 61, 78, 19, 12, -32, -88, 31,
				-123, -37, 108, 16, 88, 12, 6, -70, 64, -93, 96, 41, 44, -118,
				-49, 64, -126, 105, 33, 36, 22, -40, 69, -126, -128, 81, 24,
				-80, 13, 3, 119, -125, 12, -113, 55, 5, -125, 1, -80, -103, 56,
				-42, -19, -72, -68, 29, 1, 0, 59 };
		return data;
	}

	/**
	 * Codificacion GIF del icono "no-ok"
	 */
	private static final byte[] no_ok_image() {
		byte data[] = { 71, 73, 70, 56, 57, 97, 16, 0, 16, 0, -77, 15, 0, -2,
				-16, -16, -18, -38, -38, -2, -87, -87, -1, -1, -1, -1, -52,
				-52, -2, 7, 7, -2, 73, 73, -89, 36, 36, -2, 41, 41, -42, 36,
				36, -49, 8, 8, -18, 0, 0, -2, -41, -41, -2, -115, -115, -24,
				107, 107, -1, -1, -1, 33, -7, 4, 1, 0, 0, 15, 0, 44, 0, 0, 0,
				0, 16, 0, 16, 0, 0, 4, -124, -16, -55, -112, -108, -67, 39,
				-56, 77, 29, 35, 32, -63, 56, 25, -105, 120, 34, -93, -118,
				-92, 70, 25, 2, 40, -52, 49, 33, 24, 89, 98, 52, 2, 48, 16,
				-115, 6, 97, 0, 16, 52, 18, 7, -123, -63, -47, -16, 13, 102, 3,
				-94, 3, -127, -80, 24, -82, 14, 103, 20, 96, 88, 120, 45, 84,
				-86, -63, 9, 64, 120, -65, -118, -126, -70, -32, -120, 70, -69,
				103, -53, -38, -80, 117, -62, 23, -14, 2, -99, 72, -75, -85,
				21, 7, 11, 5, 8, 12, 92, 106, 99, 12, 8, 5, -128, 1, 73, -125,
				6, 107, 122, -118, -116, 15, -115, 9, 97, -104, 8, 72, 26, 19,
				7, 58, 87, -96, -101, 27, -99, 7, -91, -90, 37, 18, 17, 0, 59 };
		return data;
	}

	// ----------------------------------------------------------------------------//
	// MIEMBROS PRIVADOS //
	// ----------------------------------------------------------------------------//

	/**
	 * Logo de Xfsg
	 */
	public static final ImageIcon Xfsg_logo = new ImageIcon(xfsg_logo_image());

	/**
	 * Icono de una base de datos (disco)
	 */
	public static final ImageIcon dbase = new ImageIcon(dbase_image());

	/**
	 * Icono de una base de datos cerrada (disco-dis)
	 */
	public static final ImageIcon dbase_d = new ImageIcon(dbase_d_image());

	/**
	 * Icono de una base de reglas (cabeza con engranaje)
	 */
	public static final ImageIcon rulebase = new ImageIcon(rulebase_image());

	/**
	 * Icono de un módulo crisp (símbolos matemáticos)
	 */
	public static final ImageIcon crispblock = new ImageIcon(crisp_image());

	/**
	 * Icono de directorio
	 */
	public static final ImageIcon folder = new ImageIcon(folder_image());

	/**
	 * Icono de directorio abierto
	 */
	public static final ImageIcon ofolder = new ImageIcon(ofolder_image());

	/**
	 * Icono de módulo definido
	 */
	public static final ImageIcon ok = new ImageIcon(ok_image());

	/**
	 * Icono de módulo no definido
	 */
	public static final ImageIcon no_ok = new ImageIcon(no_ok_image());
}
