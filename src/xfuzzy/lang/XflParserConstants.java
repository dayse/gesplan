/* Generated By:JavaCC: Do not edit this line. XflParserConstants.java */
package xfuzzy.lang;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface XflParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int IMPORT = 7;
  /** RegularExpression Id. */
  int OPERATORSET = 8;
  /** RegularExpression Id. */
  int TYPE = 9;
  /** RegularExpression Id. */
  int EXTENDS = 10;
  /** RegularExpression Id. */
  int RULEBASE = 11;
  /** RegularExpression Id. */
  int USING = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int CRISP = 14;
  /** RegularExpression Id. */
  int SYSTEM = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int NOT = 18;
  /** RegularExpression Id. */
  int VERY = 19;
  /** RegularExpression Id. */
  int MOREORLESS = 20;
  /** RegularExpression Id. */
  int SLIGHTLY = 21;
  /** RegularExpression Id. */
  int IS = 22;
  /** RegularExpression Id. */
  int ISNOT = 23;
  /** RegularExpression Id. */
  int GREATEROREQUAL = 24;
  /** RegularExpression Id. */
  int SMALLEROREQUAL = 25;
  /** RegularExpression Id. */
  int GREATER = 26;
  /** RegularExpression Id. */
  int SMALLER = 27;
  /** RegularExpression Id. */
  int APPROXEQUAL = 28;
  /** RegularExpression Id. */
  int VERYEQUAL = 29;
  /** RegularExpression Id. */
  int SLIGHTLYEQUAL = 30;
  /** RegularExpression Id. */
  int ASIGN = 31;
  /** RegularExpression Id. */
  int THEN = 32;
  /** RegularExpression Id. */
  int ID = 33;
  /** RegularExpression Id. */
  int OPERATOR = 34;
  /** RegularExpression Id. */
  int NUMBER = 35;
  /** RegularExpression Id. */
  int INTEGER = 36;
  /** RegularExpression Id. */
  int FLOAT = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"import\"",
    "\"operatorset\"",
    "\"type\"",
    "\"extends\"",
    "\"rulebase\"",
    "\"using\"",
    "\"if\"",
    "\"crisp\"",
    "\"system\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"+\"",
    "\"~\"",
    "\"%\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"~=\"",
    "\"+=\"",
    "\"%=\"",
    "\"=\"",
    "\"->\"",
    "<ID>",
    "<OPERATOR>",
    "<NUMBER>",
    "<INTEGER>",
    "<FLOAT>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"(\"",
    "\",\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
  };

}
